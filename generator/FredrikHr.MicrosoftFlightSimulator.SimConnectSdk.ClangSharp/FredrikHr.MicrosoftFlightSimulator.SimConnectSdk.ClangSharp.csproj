<?xml version="1.0" encoding="utf-8"?>
<Project>

  <PropertyGroup>
    <Configurations>Release</Configurations>
    <DefaultProjectConfiguration>Release</DefaultProjectConfiguration>
    <Platforms>x64</Platforms>
    <DefaultProjectPlatform>x64</DefaultProjectPlatform>
  </PropertyGroup>

  <Import Sdk="Microsoft.Build.NoTargets" Project="Sdk.props" />
  <Import Project="$(MSBuildThisFileDirectory)..\..\bundle\MsfsSdkPath.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <AppendPlatformToOutputPath>false</AppendPlatformToOutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <OutputPath>$(MSBuildThisFileDirectory)..\..\generated</OutputPath>
    <TargetsTriggeredByCompilation>$(TargetsTriggeredByCompilation);ExecuteClangSharpPInvokeGenerator</TargetsTriggeredByCompilation>
  </PropertyGroup>

  <ItemGroup>
    <SimConnectPrepend Include="SimConnect.prepend.h" />
    <SimConnectSdkHeader Include="$(MsfsSdkPath)SimConnect SDK\include\SimConnect.h" />
    <None Include="$(MsfsSdkPath)SimConnect SDK\include\SimConnect.h;$(MsfsSdkPath)version.txt">
      <LinkBase>SimConnect SDK</LinkBase>
    </None>
    <None Include="$(OutputPath)SimConnect.h">
      <LinkBase>generated</LinkBase>
    </None>
    <None Include="$(OutputPath)PInvoke\*.*">
      <LinkBase>generated\PInvoke</LinkBase>
    </None>
    <None Include="$(OutputPath)Xml\*.*">
      <LinkBase>generated\Xml</LinkBase>
    </None>
    <ClInclude Include="$(OutputPath)SimConnect.h" />
    <ClangSharpPInvokeGeneratorResponseFile Include="SimConnect.ClangSharp.rsp" />
    <ClangSharpPInvokeGeneratorExecution Include="PInvoke">
      <GeneratorOutput>$(OutputPath)%(Identity)</GeneratorOutput>
      <OutputMode>CSharp</OutputMode>
      <OutputFileExtension>.cs</OutputFileExtension>
      <MarkerFile>$(OutputPath)ClangSharp.%(Identity).marker</MarkerFile>
    </ClangSharpPInvokeGeneratorExecution>
    <ClangSharpPInvokeGeneratorExecution Include="Xml">
      <GeneratorOutput>$(OutputPath)%(Identity)</GeneratorOutput>
      <OutputMode>Xml</OutputMode>
      <OutputFileExtension>.xml</OutputFileExtension>
      <MarkerFile>$(OutputPath)ClangSharp.%(Identity).marker</MarkerFile>
    </ClangSharpPInvokeGeneratorExecution>
  </ItemGroup>

  <Import Sdk="Microsoft.Build.NoTargets" Project="Sdk.targets" />

  <Import Project="SimConnect.MSBuildTasks.props" />

  <Target
    Name="ConcatClangSharpPInvokeGeneratorHeaderInput"
    Inputs="$(MSBuildAllProjects);@(SimConnectPrepend);@(ClangSharpPInvokeGeneratorResponseFile);@(SimConnectSdkHeader)"
    Outputs="@(ClInclude)"
  >
    <ReadLinesFromFile File="@(SimConnectPrepend)">
      <Output TaskParameter="Lines" ItemName="SimConnectHeaderLines" />
    </ReadLinesFromFile>
    <ReadLinesFromFile File="@(SimConnectSdkHeader)">
      <Output TaskParameter="Lines" ItemName="SimConnectSdkHeaderLines" />
    </ReadLinesFromFile>
    <SimConnectSdkHeaderFixup Lines="@(SimConnectSdkHeaderLines)">
      <Output TaskParameter="Lines" ItemName="SimConnectHeaderLines" />
    </SimConnectSdkHeaderFixup>
    <WriteLinesToFile File="@(ClInclude)" Lines="@(SimConnectHeaderLines)" Overwrite="true" />
  </Target>

  <Target
    Name="ExecuteClangSharpPInvokeGenerator"
    Inputs="$(MSBuildAllProjects);@(ClInclude);@(ClangSharpPInvokeGeneratorResponseFile)"
    Outputs="@(ClangSharpPInvokeGeneratorExecution->'%(MarkerFile)')"
    DependsOnTargets="ConcatClangSharpPInvokeGeneratorHeaderInput"
  >
    <CreateItem Include="@(ClangSharpPInvokeGeneratorExecution->'%(GeneratorOutput)\*%(OutputFileExtension)')" PreserveExistingMetadata="false">
      <Output TaskParameter="Include" ItemName="ClangSharpPInvokeGeneratorPreviousOutput" />
    </CreateItem>
    <Delete Files="@(ClangSharpPInvokeGeneratorPreviousOutput)">
      <Output TaskParameter="DeletedFiles" ItemName="ClangSharpPInvokeGeneratorPreviousOutputDeleted" />
    </Delete>
    <Exec
      Command="dotnet tool run ClangSharpPInvokeGenerator -- &quot;--output:%(ClangSharpPInvokeGeneratorExecution.GeneratorOutput)&quot; --output-mode:%(ClangSharpPInvokeGeneratorExecution.OutputMode) @(ClangSharpPInvokeGeneratorResponseFile->'&quot;@%(FullPath)&quot;', ' ') @(ClInclude->'&quot;--file:%(FullPath)&quot;', ' ')"
      IgnoreExitCode="false"
    >
      <Output TaskParameter="ExitCode" ItemName="ClangSharpPInvokeGeneratorExitCode" />
    </Exec>
    <Touch Files="@(ClangSharpPInvokeGeneratorExecution->'%(MarkerFile)')" AlwaysCreate="true" />
  </Target>

</Project>
